package hb.junits;

import static org.junit.Assert.*;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.Calendar;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import com.humanbooster.jdbc.managers.UserManager;
import com.humanbooster.jdbc.objects.User;
import com.humanbooster.jdbc.utils.DataConnect;

import hb.pojos.Flower;
import hb.services.FlowerService;
import hb.services.impl.FlowerServiceImpl;

public class FlowerServiceTestUnit {
	//Atribut
	private FlowerServiceImpl flowerServiceImpl;
	private Flower flowerForTest;
	Calendar c = Calendar.getInstance();

	public String[] getFlowersName() {
		String[] names = new String[flowers.size()];
		int count = 0;
		for(Flower f:flowers){
			names[count] = f.getName();
			count++;
		}
		return names;
	}
	
	@Before
	public void runBeforeEveryTest() {
		flowerForTest =new Flower(25,"geranium","Fleur résistante au sec et à la chaleur",c.getTime(),"rouge");
	}
	
	
	
	public int getNumberOfFlowers() {
		return flowers.size();
	}
	
	@Test
	public void testgetNumberOfFlowers(){
		int numberOfFlower = flowerServiceImpl.size(Flower);
		int numberOfFlowerGet = flowerServiceImpl.getNumberOfFlowers();
		assertEquals(numberOfBasket,numberOfBasketGet);
	}
	
	
	
	
	/*
	@Test
	public void testGetFlowersName(){
		Flower flower = flowerServiceImpl.getFlowersName(flowerForTest.getName());
		assertNotNull(flower);
		assertTrue(flower.getName().equals("test"));
		assertTrue(user.getPassword().equals("tototititata"));
	}
	*/

}
